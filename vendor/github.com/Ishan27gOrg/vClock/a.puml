@startuml
namespace vClock {
    class Event << (S,Aquamarine) >> {
        + EventId string
        + EventClock EventClock

    }
    class EventClock << (S,Aquamarine) >> {
        - mergeWith(v2 EventClock) *EventClock

    }
    interface Events  {
        + MergeEvents(es ...Event) 
        + MergeEvent(e Event) 
        + GetCurrentEvents() []Event
        + GetEventsOrder() []Event

    }
    interface VectorClock  {
        - get() (string, <font color=blue>map</font>[string]EventClock)
        - print() 

        + Get(eventIdOrHash string) EventClock
        + SendEvent(eventIdOrHash string, addresses []string) EventClock
        + ReceiveEvent(eventIdOrHash string, v EventClock) 
        + Clear(eventIdOrHash string) 

    }
    class events << (S,Aquamarine) >> {
        - clocks *orderedmap.OrderedMap

        + GetCurrentEvents() []Event
        + MergeEvents(ev ...Event) 
        + MergeEvent(ev Event) 
        + GetEventsOrder() []Event

    }
    class peerClock << (S,Aquamarine) >> {
        - add(peer string) bool
        - update(peer string) 
        - get(peer string) int
        - updateTo(address string, clock int) 

    }
    class vClock << (S,Aquamarine) >> {
        - lock sync.Mutex
        - self string
        - vectorClock <font color=blue>map</font>[string]EventClock

        - get() (string, <font color=blue>map</font>[string]EventClock)
        - print() 
        - event(eventIdOrHash string, address string) 
        - updateClock(eventIdOrHash string, address string, newClock int) 
        - initClock(event string, peer string) 

        + Clear(eventIdOrHash string) 
        + Get(eventIdOrHash string) EventClock
        + SendEvent(eventIdOrHash string, address []string) EventClock
        + ReceiveEvent(eventIdOrHash string, v1 EventClock) 

    }
    class vClock.EventClock << (T, #FF7700) >>  {
    }
    class vClock.peerClock << (T, #FF7700) >>  {
    }
}

"vClock.Events" <|-- "vClock.events"
"vClock.VectorClock" <|-- "vClock.vClock"

"__builtin__.<font color=blue>map</font>[string]*int" #.. "vClock.peerClock"
"__builtin__.<font color=blue>map</font>[string]int" #.. "vClock.EventClock"
@enduml
